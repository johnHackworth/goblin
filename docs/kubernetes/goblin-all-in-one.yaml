kind: ConfigMap
apiVersion: v1
metadata:
  name: goblin-config
data:
# CHANGE VALUES BELOW AS NEEDED
  default.yml: |-
    url: http://your-public-server.example.com:3000
    port: 3000
    db:
      host: goblin-postgres
      port: 5432
      db: goblin
      user: goblin
      pass: goblin_BUT_CHANGE_THIS
    redis:
      host: goblin-redis
      port: 6379
      family: 4

    id: 'aid'
    reservedUsernames:
      - changes
      - staff
      - root
      - admin
      - administrator
      - me
      - system
---
# END OF CHANGES THAT YOU SHOULD REASONABLY NEED
apiVersion: v1
kind: Service
metadata:
  name: goblin
  labels:
    name: goblin
spec:
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    name: goblin
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: goblin-postgres
  labels:
    name: goblin-postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      name: goblin-postgres
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        name: goblin-postgres
    spec:
      enableServiceLinks: true
      containers:
        - name: goblin-postgres
          image: 'postgres:16.2-bookworm'
          env:
            - name: POSTGRES_PASSWORD
# ALSO CHANGE THE LINE BELOW
              value: superadminpassword_changeme
# CHANGE THE LINE ABOVE
          resources:
            requests:
              cpu: 500m
              memory: 600Mi
          livenessProbe:
            tcpSocket:
              port: 5432
            timeoutSeconds: 5
            initialDelaySeconds: 240
            successThreshold: 1
            failureThreshold: 3
            periodSeconds: 30
          ports:
            - name: postgres
              containerPort: 5432
              protocol: TCP
          volumeMounts:
            - name: goblin-postgres-disk
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: goblin-postgres-disk
          hostPath:
            path: /volumes/goblin_postgres
      terminationGracePeriodSeconds: 45
---
apiVersion: v1
kind: Service
metadata:
  name: goblin-postgres
  labels:
    name: goblin-postgres
spec:
  ports:
    - port: 5432
      targetPort: 5432
      protocol: TCP
      name: postgres
  selector:
    name: goblin-postgres
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: goblin-redis
  labels:
    name: goblin-redis
spec:
  replicas: 1
  selector:
    matchLabels:
      name: goblin-redis
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        name: goblin-redis
    spec:
      enableServiceLinks: true
      containers:
        - name: goblin-redis
          image: 'redis:7.2-bookworm'
          resources:
            requests:
              cpu: 100m
              memory: 80Mi
          livenessProbe:
            tcpSocket:
              port: 6379
          ports:
            - name: http
              containerPort: 6379
              protocol: TCP
          volumeMounts:
            - name: redis-disk
              mountPath: /data
      volumes:
        - name: redis-disk
          hostPath:
            path: /volumes/goblin_redis
      terminationGracePeriodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: goblin-redis
  labels:
    name: goblin-redis
spec:
  ports:
    - port: 6379
      targetPort: 6379
      protocol: TCP
      name: redis
  selector:
    name: goblin-redis
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/cors-allow-headers: DNT,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Device,
      X-App, Login_Session_Id, User_Id
    nginx.ingress.kubernetes.io/cors-allow-origin: '*'
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
  labels:
    app.kubernetes.io/instance: goblin
    app.kubernetes.io/name: goblin
  name: goblin
  namespace: default
spec:
  ingressClassName: public
  rules:
    - host: goblin.stopdelaying.com
      http:
        paths:
          - backend:
              service:
                name: goblin
                port:
                  number: 80
            path: /(?![sp]/)(.*)
            pathType: Prefix
status:
  loadBalancer:
    ingress:
      - ip: 127.0.0.1